unit __GetElementType;

interface
implementation
uses xEditAPI, Classes, SysUtils, StrUtils, Windows; //Remove before use in xEdit
    if Name(ielement) = 'Alternate Texture' then
    begin
      if Assigned(ElementByPath(ielement, '3D Name')) then
      begin
        s := GetEditValue(ElementByIndex(GetContainer(GetContainer(ielement)), 0));
        if LastDelimiter('.', s) <> (Length(s) - 3) then s := '';
        slNifs.Add(s);
        _TXST := LinksTo(ElementByPath(ielement, 'New Texture'));
        s := s + ';' + GetElementEditValues(_TXST, 'EDID')
        + ';' + GetElementEditValues(ielement, '3D Name')
        + ';' + GetElementEditValues(_TXST, 'Textures (RGB/A)\TX00')
        + ';' + GetElementEditValues(_TXST, 'Textures (RGB/A)\TX01')
        + ';' + GetElementEditValues(_TXST, 'Textures (RGB/A)\TX02')
        + ';' + GetElementEditValues(_TXST, 'Textures (RGB/A)\TX03')
        + ';' + GetElementEditValues(_TXST, 'Textures (RGB/A)\TX04')
        + ';' + GetElementEditValues(_TXST, 'Textures (RGB/A)\TX05') + ';';
        if Assigned(ElementByPath(_TXST, 'DNAM\No Specular Map')) then
          s := s + 'No Specular Map';
        slvalues.Add(s);
        sl3DNames.Add(GetElementEditValues(ielement, '3D Name'));
      end;
    end;

function Initialize: integer;
begin
	Result := 0;
end;

function Process(e: IInterface): integer;
var
rec, rec2: IInterface;
recordpath: String;

begin
//	AddMessage(IntToStr(ElementType(ElementByPath(e, 'Record Header\Record Flags'))));
//	AddMessage(IntToStr(ElementType(ElementByPath(e, 'DATA'))));
	AddMessage(FlagValues(ElementByPath(e, 'DATA')));
	AddMessage(FlagValues(ElementByPath(e, 'Record Header\Record Flags')));
  Add(e, 'CELL', True);
  if Signature(e) = 'CELL' then rec := e;
  rec2 := RecordByFormID(FileByLoadOrder(1), $0016D714, True);
  AddMessage(Signature(rec));
  AddMessage(Signature(rec2));


	Result := 0;	
end;

function Finalize: integer;
begin
	Result := 0;
end;

end.